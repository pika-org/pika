# Copyright (c) 2023 ETH Zurich
#
# SPDX-License-Identifier: BSL-1.0
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

name: Linux CI (valgrind)

on:
  merge_group:
  pull_request:
  push:
    branches:
      # Development and release branches
      - main
      - release**

jobs:
  build:
    name: github/linux/valgrind
    runs-on: ubuntu-24.04
    container: pikaorg/pika-ci-base:29

    strategy:
      matrix:
        build_type: ["Debug", "Release"]

    steps:
      - uses: actions/checkout@v4
      - name: Update apt repositories for ccache
        run: apt update
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ccache-linux-valgrind-${{ matrix.build_type }}
      - name: Configure
        shell: bash
        # -gdwarf-4 because of https://github.com/llvm/llvm-project/issues/56550
        run: |
            cmake \
                . \
                -Bbuild \
                -GNinja \
                -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
                -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                -DCMAKE_CXX_FLAGS="-gdwarf-4" \
                -DPIKA_WITH_MALLOC=system \
                -DPIKA_WITH_MPI=ON \
                -DPIKA_WITH_EXAMPLES=ON \
                -DPIKA_WITH_TESTS=ON \
                -DPIKA_WITH_TESTS_EXAMPLES=ON \
                -DPIKA_WITH_TESTS_EXTERNAL_BUILD=OFF \
                -DPIKA_WITH_TESTS_HEADERS=OFF \
                -DPIKA_WITH_TESTS_MAX_THREADS=$(nproc) \
                -DPIKA_WITH_COMPILER_WARNINGS=ON \
                -DPIKA_WITH_COMPILER_WARNINGS_AS_ERRORS=ON \
                -DPIKA_WITH_VALGRIND=ON \
                -DPIKA_WITH_TESTS_VALGRIND=ON \
                -DPIKA_WITH_TESTS_VALGRIND_OPTIONS="--error-exitcode=1;--leak-check=full;--fair-sched=yes;--gen-suppressions=all;--suppressions=$PWD/tools/valgrind/memcheck.supp" \
                -DPIKA_WITH_STACKOVERFLOW_DETECTION=Off \
                -DPIKA_WITH_CHECK_MODULE_DEPENDENCIES=On
      - name: Build
        shell: bash
        run: |
            cmake --build build --target examples
            cmake --build build --target tests
      - name: Test
        shell: bash
        run: |
            # We are certain that we want to run mpiexec as root despite warnings as that is the
            # only user available in the container. Mistakes will only affect the current step.
            export OMPI_ALLOW_RUN_AS_ROOT=1
            export OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1

            cd build
            ctest \
              -j $(nproc) \
              --timeout 300 \
              --output-on-failure
