# Copyright (c) 2023 ETH Zurich
#
# SPDX-License-Identifier: BSL-1.0
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file BOOST_LICENSE_1_0.rst or copy at http://www.boost.org/LICENSE_1_0.txt)

include:
  - local: '.gitlab/includes/common_pipeline.yml'

variables:
  SPACK_COMMIT: fe2b6d7055b37ac856a57cec911da9a8928992b8

.base_spack_image:
  timeout: 2 hours
  before_script:
    - export DOCKERFILE_SHA=`sha256sum $DOCKERFILE | head -c 16`
    - export CONFIG_TAG=`echo $DOCKERFILE_SHA-$BASE_IMAGE-$SPACK_COMMIT | sha256sum - | head -c 16`
    - export PERSIST_IMAGE_NAME=$CSCS_REGISTRY_PATH/$ARCH/pika-spack-base:$CONFIG_TAG
    - arch_upper=`echo $ARCH | tr '[:lower:]' '[:upper:]'`
    - echo -e "CONFIG_TAG=$CONFIG_TAG" >> base.env
    - echo -e "BASE_IMAGE_$arch_upper=$PERSIST_IMAGE_NAME" >> base.env
  variables:
    BASE_IMAGE: docker.io/ubuntu:22.04
    DOCKERFILE: .gitlab/docker/Dockerfile.spack_base
    DOCKER_BUILD_ARGS: '["BASE_IMAGE","SPACK_COMMIT"]'
  artifacts:
    reports:
      dotenv: base.env

# We allow failure since santis is unstable
base_spack_image_aarch64:
  extends: [.container-builder-cscs-gh200, .base_spack_image]
  allow_failure: true
base_spack_image_x86_64:
  extends: [.container-builder-cscs-zen2, .base_spack_image]

make_multiarch_image:
  needs:
    - job: base_spack_image_aarch64
      optional: true
    - job: base_spack_image_x86_64
  extends: .make-multiarch-image
  after_script:
    - echo -e "BASE_IMAGE=$PERSIST_IMAGE_NAME" >> multiarch.env
  variables:
    PERSIST_IMAGE_NAME: $CSCS_REGISTRY_PATH/pika-spack-base:${CONFIG_TAG}
    PERSIST_IMAGE_NAME_AARCH64: $BASE_IMAGE_AARCH64
    PERSIST_IMAGE_NAME_X86_64: $BASE_IMAGE_X86_64
  artifacts:
    reports:
      dotenv: multiarch.env

.compiler_image_template:
  needs: [make_multiarch_image]
  before_script:
    - export DOCKERFILE_SHA=`sha256sum $DOCKERFILE | head -c 16`
    - compiler=${COMPILER}${NVHPC_COMPILER:+-}${NVHPC_COMPILER}
    - compiler=${compiler//@/-}
    - CONFIG_TAG=`echo $DOCKERFILE_SHA-$SPACK_ARCH-$BASE_IMAGE-$compiler | sha256sum - | head -c 16`
    - export PERSIST_IMAGE_NAME=$CSCS_REGISTRY_PATH/base/pika-$compiler:$CONFIG_TAG
    - echo -e "compiler=$compiler" >> compiler.env
    - echo -e "BASE_IMAGE=$PERSIST_IMAGE_NAME" >> compiler.env
  variables:
    DOCKERFILE: .gitlab/docker/Dockerfile.spack_compiler
    DOCKER_BUILD_ARGS: '["BASE_IMAGE","SPACK_ARCH","COMPILER","NVHPC_COMPILER"]'
  artifacts:
    reports:
      dotenv: compiler.env

.compiler_image_template_santis:
  extends: [.container-builder-cscs-gh200, .compiler_image_template]

.compiler_image_template_rosa:
  extends: [.container-builder-cscs-zen2, .compiler_image_template]

.dependencies_image_template:
  before_script:
    - export DOCKERFILE_SHA=`sha256sum $DOCKERFILE | head -c 16`
    - CONFIG_TAG=`echo $DOCKERFILE_SHA-$BASE_IMAGE-$SPACK_SPEC | sha256sum - | head -c 16`
    - export PERSIST_IMAGE_NAME=$CSCS_REGISTRY_PATH/base/pika-$compiler-dependencies:$CONFIG_TAG
    - echo -e "compiler=$compiler" >> dependencies.env
    - echo -e "BASE_IMAGE=$PERSIST_IMAGE_NAME" >> dependencies.env
  variables:
    DOCKERFILE: .gitlab/docker/Dockerfile.spack_dependencies
    DOCKER_BUILD_ARGS: '["BASE_IMAGE","SPACK_SPEC"]'
  artifacts:
    reports:
      dotenv: dependencies.env

.dependencies_image_template_santis:
  extends: [.container-builder-cscs-gh200, .dependencies_image_template]

.dependencies_image_template_rosa:
  extends: [.container-builder-cscs-zen2, .dependencies_image_template]

.parallel_build_types:
  parallel:
    matrix:
      - BUILD_TYPE:
          - Debug
          - Release
  variables:
    DOTENV_FILE: "build-$BUILD_TYPE.env"

.build_template:
  extends:
    - .build_variables_common
    - .cmake_variables_common
    - .parallel_build_types
  before_script:
    - export DOCKERFILE_SHA=`sha256sum $DOCKERFILE | head -c 16`
    - build_type=`echo $BUILD_TYPE | tr '[:upper:]' '[:lower:]'`
    - build_type_upper=`echo $BUILD_TYPE | tr '[:lower:]' '[:upper:]'`
    - configuration=$DOCKERFILE_SHA-$BASE_IMAGE-$BUILD_DIR-$CMAKE_COMMON_FLAGS-$CMAKE_FLAGS-$CI_COMMIT_SHORT_SHA-$SOURCE_DIR-$ARCH
    - configuration=${configuration//-D/}
    - CONFIG_TAG=`echo $configuration | sha256sum - | head -c 16`
    - export PERSIST_IMAGE_NAME=$CSCS_REGISTRY_PATH/pika-$compiler-$build_type-build:$CONFIG_TAG
    - echo -e "PERSIST_IMAGE_NAME_${build_type_upper}=$PERSIST_IMAGE_NAME" >> $DOTENV_FILE
  artifacts:
    reports:
      dotenv: "$DOTENV_FILE"

.build_template_santis:
  extends: [.container-builder-cscs-gh200, .build_template]

.build_template_rosa:
  extends: [.container-builder-cscs-zen2, .build_template]

.test_template:
  extends:
    - .cmake_variables_common
  script:
    - spack arch
    - export CTEST_XML=$PWD/ctest.xml
    - trap "${SOURCE_DIR}/.gitlab/scripts/collect_ctest_metrics.sh ${CTEST_XML}" EXIT
    - spack -e pika_ci build-env $spack_spec -- bash -c "ctest --output-junit ${CTEST_XML} --label-exclude COMPILE_ONLY --test-dir ${BUILD_DIR} -j$(($(nproc)/2)) --timeout 120 --output-on-failure --no-compress-output --no-tests=error"
