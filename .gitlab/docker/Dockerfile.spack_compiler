ARG BASE_IMAGE
FROM $BASE_IMAGE

SHELL ["/bin/bash", "-c"]

# Disable host compatibility to be able to compile for other architectures than the one from the
# CSCS CI's .container-builder
# Allow installing deprecated packages (needed for apex)
# Use curl as the fetch method to try to avoid fetch errors. Additionally retry more on failures.
RUN spack config --scope site add concretizer:targets:host_compatible:false && \
    spack config --scope site add config:deprecated:true && \
    spack config --scope site add config:url_fetch_method:curl && \
    spack config --scope site add config:connect_timeout:10 && \
    echo "retry = 10" >> $HOME/.curlrc && \
    echo "retry-connrefused" >> $HOME/.curlrc && \
    echo "retry-max-time = 30" >> $HOME/.curlrc

# Provided by the gitlab runner of .container-builder
ARG NUM_PROCS

# Install compiler if not already installed, modify packages.yaml to require spack compilers
ARG SPACK_ARCH
ARG BASE_COMPILER
ARG COMPILER
ARG NVHPC_COMPILER
RUN echo "spack arch: $(spack arch)"; \
    set -ex; \
    compiler_missing=0; \
    spack compiler info $COMPILER > /dev/null 2> /dev/null || compiler_missing=1; \
    export spack_compiler=${COMPILER/clang/llvm}; \
    if [[ $spack_compiler =~ llvm ]]; then \
        export spack_compiler="$spack_compiler~gold"; \
    fi; \
    if [[ ! -z "$BASE_COMPILER" ]]; then \
        if [[ ! $BASE_COMPILER =~ gcc ]]; then \
            echo "Base compiler must be gcc"; \
            exit 1; \
        fi; \
        base_compiler_missing=0; \
        spack compiler info $BASE_COMPILER > /dev/null 2> /dev/null || base_compiler_missing=1; \
        if [[ $base_compiler_missing != 0 ]]; then \
            spack install -j$NUM_PROCS $BASE_COMPILER arch=$SPACK_ARCH; \
            spack external find \
                --scope site \
                --path $(spack location -i $BASE_COMPILER) gcc; \
        fi; \
        export spack_compiler="$spack_compiler %$BASE_COMPILER"; \
    fi; \
    if [[ $compiler_missing != 0 ]]; then \
        spack install -j$NUM_PROCS $spack_compiler arch=$SPACK_ARCH; \
        spack external find \
            --scope site \
            --path $(spack location -i $spack_compiler) gcc llvm; \
        \
        printf "  all:\n    require:\n    - one_of: [\"%%${COMPILER}\"${NVHPC_COMPILER:+,\"%%}${NVHPC_COMPILER}${NVHPC_COMPILER:+\"}]" \
            >> $SPACK_ROOT/etc/spack/packages.yaml; \
        \
        if [[ ! -z "$NVHPC_COMPILER" ]]; then \
            nvhpc_version=${NVHPC_COMPILER#nvhpc@}; \
            spack install -j$NUM_PROCS $NVHPC_COMPILER%$spack_compiler arch=$SPACK_ARCH; \
            spack external find \
                --scope site \
                --path $(spack location -i $NVHPC_COMPILER)/Linux_$(uname -m)/$nvhpc_version/compilers/bin \
                nvhpc; \
        fi; \
    fi; \
    spack clean --all
